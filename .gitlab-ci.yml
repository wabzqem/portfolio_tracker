# GitLab CI/CD Pipeline for Portfolio Tracker
# Builds Electron app and deploys to GitLab Pages

stages:
  - build
  - deploy

# Cache node_modules to speed up builds
cache:
  paths:
    - node_modules/

# Build the Electron application
build:
  stage: build
  image: node:18-alpine
  before_script:
    # Install system dependencies needed for Electron builds
    - apk add --no-cache python3 make g++ git
  script:
    # Install dependencies
    - npm ci --prefer-offline
    
    # Build for all platforms (Linux, macOS, Windows)
    # Using parallel builds to save time
    - npm run build
    
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  only:
    - tags
    - main
  # Use smaller runner if available
  tags:
    - docker

# Deploy releases page to GitLab Pages
pages:
  stage: deploy
  image: alpine:latest
  script:
    - mkdir -p public
    - echo '<!DOCTYPE html>' > public/index.html
    - echo '<html lang="en">' >> public/index.html
    - echo '<head>' >> public/index.html
    - echo '  <meta charset="UTF-8">' >> public/index.html
    - echo '  <meta name="viewport" content="width=device-width, initial-scale=1.0">' >> public/index.html
    - echo '  <title>Portfolio Tracker - Releases</title>' >> public/index.html
    - echo '  <style>' >> public/index.html
    - echo '    body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; max-width: 800px; margin: 50px auto; padding: 20px; line-height: 1.6; }' >> public/index.html
    - echo '    h1 { color: #333; }' >> public/index.html
    - echo '    .download-btn { display: inline-block; background: #0066cc; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px; margin: 5px; }' >> public/index.html
    - echo '    .download-btn:hover { background: #0052a3; }' >> public/index.html
    - echo '  </style>' >> public/index.html
    - echo '</head>' >> public/index.html
    - echo '<body>' >> public/index.html
    - echo '  <h1>Portfolio Tracker</h1>' >> public/index.html
    - echo '  <p>A professional desktop application for tracking investment portfolios.</p>' >> public/index.html
    - echo '  <h2>Download</h2>' >> public/index.html
    - echo '  <p>Visit the <a href="https://gitlab.com/wabzqem/portfolio-tracker/-/releases" class="download-btn">Releases Page</a></p>' >> public/index.html
    - echo '  <h2>Features</h2>' >> public/index.html
    - echo '  <ul>' >> public/index.html
    - echo '    <li>Trade tracking and portfolio management</li>' >> public/index.html
    - echo '    <li>Capital gains calculation (ATO-compliant FIFO)</li>' >> public/index.html
    - echo '    <li>Currency conversion (USD/AUD)</li>' >> public/index.html
    - echo '    <li>Options support</li>' >> public/index.html
    - echo '    <li>Performance analytics</li>' >> public/index.html
    - echo '  </ul>' >> public/index.html
    - echo '  <p><strong>Privacy First:</strong> All data stays on your computer. No tracking, no analytics.</p>' >> public/index.html
    - echo '</body>' >> public/index.html
    - echo '</html>' >> public/index.html
    - echo '# Portfolio Tracker' > public/README.md
    - echo '' >> public/README.md
    - echo 'Download the latest release from the [releases page](https://gitlab.com/wabzqem/portfolio-tracker/-/releases).' >> public/README.md
  artifacts:
    paths:
      - public
  only:
    - main
  tags:
    - docker

# Optional: Create GitLab Release when tag is pushed
create_release:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl jq
  script:
    - |
      echo "Creating GitLab Release for tag $CI_COMMIT_TAG"
      
      # Get all build artifacts from dist/ folder
      ASSETS_JSON="[]"
      
      # Add download links for each platform build
      if [ -d "dist" ]; then
        for file in dist/*.{dmg,exe,AppImage,deb}; do
          if [ -f "$file" ]; then
            filename=$(basename "$file")
            echo "Found build artifact: $filename"
            # You'll need to upload these to GitLab Package Registry or external storage
            # and add links here
          fi
        done
      fi
      
      # Create release using GitLab API
      curl --request POST \
        --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
        --header "Content-Type: application/json" \
        --data "{
          \"name\": \"Release $CI_COMMIT_TAG\",
          \"tag_name\": \"$CI_COMMIT_TAG\",
          \"description\": \"Automated release for Portfolio Tracker $CI_COMMIT_TAG\"
        }" \
        "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/releases"
  
  dependencies:
    - build
  only:
    - tags
  tags:
    - docker

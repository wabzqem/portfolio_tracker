name: Build and Release to Public Repository

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
      
      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            dist/*.dmg
            dist/*.zip
          if-no-files-found: warn
      
      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            dist/*.exe
          if-no-files-found: warn
      
      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            dist/*.AppImage
            dist/*.deb
          if-no-files-found: warn
  
  release-to-public:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Display structure of downloaded files
        run: ls -R artifacts
      
      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Create Release in Public Repository
        uses: softprops/action-gh-release@v1
        with:
          repository: wabzqem/portfolio-tracker-releases
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Portfolio Tracker ${{ steps.version.outputs.VERSION }}
          body: |
            ## üì¶ Downloads
            
            ### macOS
            - **Apple Silicon (M1/M2/M3/M4)**: Download the `arm64.dmg` file
            - **Intel**: Download the `x64.dmg` file
            
            ‚ö†Ô∏è **First-time users**: You'll need to run this command after installing:
            ```bash
            xattr -cr "/Applications/Portfolio Tracker.app"
            ```
            [See full macOS installation guide](https://github.com/wabzqem/portfolio-tracker-releases#macos-installation)
            
            ### Windows
            - **Installer**: Download the `Setup.exe` file (recommended)
            - **Portable**: Download the portable `.exe` file
            
            ### Linux
            - **Universal**: Download the `.AppImage` file
            - **Debian/Ubuntu**: Download the `.deb` file
            
            ---
            
            üìñ [Full installation instructions](https://github.com/wabzqem/portfolio-tracker-releases#installation)
            
            üêõ [Report issues](https://github.com/wabzqem/portfolio-tracker-releases/issues)
            
            ## What's Changed
            
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
          files: |
            artifacts/macos-build/*
            artifacts/windows-build/*
            artifacts/linux-build/*
          token: ${{ secrets.RELEASE_TOKEN }}
